<?php

/**
 * This is the model base class for the table "UPIAggregationRuleResponseOf".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UPIAggregationRuleResponseOf".
 *
 * Columns in table "UPIAggregationRuleResponseOf" available as properties of the model,
 * followed by relations of table "UPIAggregationRuleResponseOf" available as properties of the model.
 *
 * @property integer $id
 * @property integer $upiaggregationrulestart
 * @property integer $upitype
 * @property string $name
 * @property integer $requirePositionToResponse
 * @property integer $requirePositionToView
 * @property integer $republisAllowed
 * @property integer $aceptMultiple
 *
 * @property UPIAggregationRuleStart $upiaggregationrulestart0
 * @property UPIAggregationRuleStart $uPIAggregationRuleStart
 * @property UPIType $upitype0
 * @property VComUPIAggregationRuleResponseOf[] $vComUPIAggregationRuleResponseOfs
 */
abstract class BaseUPIAggregationRuleResponseOf extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'UPIAggregationRuleResponseOf';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Regra de Respostas|Regras de Respostas', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('upiaggregationrulestart, upitype, name', 'required'),
			array('upiaggregationrulestart, upitype, requirePositionToResponse, requirePositionToView, republisAllowed, aceptMultiple', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>100),
			array('requirePositionToResponse, requirePositionToView, republisAllowed, aceptMultiple', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, upiaggregationrulestart, upitype, name, requirePositionToResponse, requirePositionToView, republisAllowed, aceptMultiple', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'upiaggregationrulestart0' => array(self::BELONGS_TO, 'UPIAggregationRuleStart', 'upiaggregationrulestart'),
			'uPIAggregationRuleStart' => array(self::BELONGS_TO, 'UPIAggregationRuleStart', 'UPIAggregationRuleStart'),
			'upitype0' => array(self::BELONGS_TO, 'UPIType', 'upitype'),
			'vComUPIAggregationRuleResponseOfs' => array(self::HAS_MANY, 'VComUPIAggregationRuleResponseOf', 'upiaggregationruleresponseof'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
                        'id' => Yii::t('app', 'ID'),
                        'upiaggregationrulestart' => Yii::t('app', 'Regra de Publicação'),
                        'upitype' => Yii::t('app', 'Tipo de UPI da Resposta'),
                        'name' => Yii::t('app', 'Nome'),
                    
                        'description' => Yii::t('app', 'Descrição'),
                        'requirePositionToCreate' => Yii::t('app', 'Posição requerida para publicar:'),
                        'requirePositionToView' => Yii::t('app', 'Posição requerida para  visualizar'),
                        'republisAllowed' => Yii::t('app', 'Republicações Permitida'),
                        'aceptMultiple' => Yii::t('app', 'Formato Árvore/Linear'),                    
                        /*
			'id' => Yii::t('app', 'ID'),
			'upiaggregationrulestart' => null,
			'upitype' => null,
			'name' => Yii::t('app', 'Name'),
			'requirePositionToResponse' => Yii::t('app', 'Require Position To Response'),
			'requirePositionToView' => Yii::t('app', 'Require Position To View'),
			'republisAllowed' => Yii::t('app', 'Republis Allowed'),
			'aceptMultiple' => Yii::t('app', 'Acept Multiple'),
			*/
                        'upiaggregationrulestart0' =>  Yii::t('app', 'Regra de Publicação'),
			'uPIAggregationRuleStart' =>  Yii::t('app', 'Regra de Publicação'),
			'upitype0' => Yii::t('app', 'Tipo de UPI'),
			'vComUPIAggregationRuleResponseOfs' =>Yii::t('app', 'Regras de Respostas'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('upiaggregationrulestart', $this->upiaggregationrulestart);
		$criteria->compare('upitype', $this->upitype);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('requirePositionToResponse', $this->requirePositionToResponse);
		$criteria->compare('requirePositionToView', $this->requirePositionToView);
		$criteria->compare('republisAllowed', $this->republisAllowed);
		$criteria->compare('aceptMultiple', $this->aceptMultiple);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}