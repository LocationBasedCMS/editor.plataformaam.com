<?php

/**
 * This is the model base class for the table "UPIAggregationRuleStart".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UPIAggregationRuleStart".
 *
 * Columns in table "UPIAggregationRuleStart" available as properties of the model,
 * followed by relations of table "UPIAggregationRuleStart" available as properties of the model.
 *
 * @property integer $id
 * @property integer $vcombase
 * @property integer $upitype
 * @property string $name
 * @property string $description
 * @property integer $requirePositionToCreate
 * @property integer $requirePositionToView
 * @property integer $visibleDistance
 * @property integer $republisAllowed
 * @property integer $isSingleton
 *
 * @property UPIAggregationRuleResponseOf[] $uPIAggregationRuleResponseOfs
 * @property UPIAggregationRuleResponseOf[] $uPIAggregationRuleResponseOfs1
 * @property VComBase $vcombase0
 * @property UPIType $upitype0
 * @property VComUPIAggregationRuleStart[] $vComUPIAggregationRuleStarts
 */
abstract class BaseUPIAggregationRuleStart extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'UPIAggregationRuleStart';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Regra de Publicação|Regras de Publicações', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('vcombase, upitype, name, visibleDistance', 'required'),
			array('vcombase, upitype, requirePositionToCreate, requirePositionToView, visibleDistance, republisAllowed, isSingleton', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>100),
			array('description', 'safe'),
			array('description, requirePositionToCreate, requirePositionToView, republisAllowed, isSingleton', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, vcombase, upitype, name, description, requirePositionToCreate, requirePositionToView, visibleDistance, republisAllowed, isSingleton', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'uPIAggregationRuleResponseOfs' => array(self::HAS_MANY, 'UPIAggregationRuleResponseOf', 'UPIAggregationRuleStart'),
			'uPIAggregationRuleResponseOfs1' => array(self::HAS_MANY, 'UPIAggregationRuleResponseOf', 'upiaggregationrulestart'),
			'vcombase0' => array(self::BELONGS_TO, 'VComBase', 'vcombase'),
			'upitype0' => array(self::BELONGS_TO, 'UPIType', 'upitype'),
			'vComUPIAggregationRuleStarts' => array(self::HAS_MANY, 'VComUPIAggregationRuleStart', 'upiaggregationrulestart'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
                 'id' => Yii::t('app', 'ID'),
                        'vcombase' => Yii::t('app', 'Área de Interação'),
                        'upitype' => Yii::t('app', 'Tipo'),
                        'name' => Yii::t('app', 'Nome'),
                        'description' => Yii::t('app', 'Descrição'),
                        'requirePositionToCreate' => Yii::t('app', 'Posição requerida para publicar:'),
                        'requirePositionToView' => Yii::t('app', 'Posição requerida para  visualizar'),
                        'visibleDistance' => Yii::t('app', 'Distância de Visibilidade'),    
                        'republisAllowed' => Yii::t('app', 'Republicações Permitida'),
                        'isSingleton' => Yii::t('app', 'Publicação Única (Singleton)'),
                        /*
			'id' => Yii::t('app', 'ID'),
			'vcombase' => null,
			'upitype' => null,
			'name' => Yii::t('app', 'Name'),
			'description' => Yii::t('app', 'Description'),
			'requirePositionToCreate' => Yii::t('app', 'Require Position To Create'),
			'requirePositionToView' => Yii::t('app', 'Require Position To View'),
			'republisAllowed' => Yii::t('app', 'Republis Allowed'),
			'isSingleton' => Yii::t('app', 'Is Singleton'),
                         */
                         
			'uPIAggregationRuleResponseOfs' => Yii::t('app', 'Regras de Respostas'),
			'vcombase0' =>Yii::t('app', 'Área de Interação'),
			'upitype0' => Yii::t('app', 'Tipo de UPI'),
            );
	}
        
	

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('vcombase', $this->vcombase);
		$criteria->compare('upitype', $this->upitype);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('requirePositionToCreate', $this->requirePositionToCreate);
		$criteria->compare('requirePositionToView', $this->requirePositionToView);
		$criteria->compare('visibleDistance', $this->visibleDistance);
		$criteria->compare('republisAllowed', $this->republisAllowed);
		$criteria->compare('isSingleton', $this->isSingleton);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}